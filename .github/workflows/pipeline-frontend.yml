name: Selfcare frontend UI pipeline

on:
  push:
    branches:
      - test/pipeline
    paths:
      - frontend/**
      - 'docker-compose-frontend.yml'
      - .github/workflows/*-frontend.yml

jobs:
  build-image:
    name: Build frontend Docker image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: fetch version of project
        id: extract_version
        run: |
          cd frontend/
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/selfcare-frontend:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/selfcare-frontend:latest

  deploy:
    name: Deploy Frontend
    runs-on: self-hosted
    needs: [ build-image ]
    steps:
      - name: fetch version of project
        id: extract_version
        run: |
          cd frontend/
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_UI_IP }} "mkdir -p deployment"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose-frontend.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_UI_IP }}:deployment/docker-compose-frontend.yml

      - name: Deploy on remote Host
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_UI_IP }} <<EOF
          export VERSION=${{ steps.extract_version.outputs.VERSION }}
          cd deployment
          echo "VERSION=${{ steps.extract_version.outputs.VERSION }}" > .env
          echo "FRONTEND_DOMAIN=${{ secrets.VPS_UI_IP }}" >> .env
          echo "BACKEND_HOST=${{ secrets.VPS_IP }}" >> .env
          echo "BACKEND_PORT=8222" >> .env
          echo "BACKEND_PROTOCOL_SCHEMA='http'" >> .env
          echo "BACKEND_MODERATOR_PORT=8040" >> .env
          echo "BACKEND_KEYCLOAK_PORT=7080" >> .env
          docker compose -f docker-compose-frontend.yml pull -q
          docker compose -f docker-compose-frontend.yml up -d
          EOF
